buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
  }
  dependencies {
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
    classpath 'net.researchgate:gradle-release:2.4.0'
  }
}

ext.tangram_version = "0.4.2"

apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'net.researchgate.release'

group = GROUP
version = VERSION_NAME
project.archivesBaseName = POM_ARTIFACT_ID

release {
  tagTemplate = 'v${version}'
  versionPropertyFile = '../gradle.properties'
  versionProperties = ['VERSION_NAME']
}

afterReleaseBuild.dependsOn uploadArchives

android {
  compileSdkVersion 23
  buildToolsVersion "23.0.3"

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 23
    versionCode 1
    versionName "1.0"
    resValue "string", "tangram_version", "${tangram_version}"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  lintOptions {
    abortOnError false
  }
}

tasks.withType(Test) {
  testLogging {
    exceptionFormat "full"
    events "started", "skipped", "passed", "failed"
    showStandardStreams true
  }
}

task checkstyle(type: Checkstyle) {
  configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  classpath = files()
}

task verify(dependsOn: ['compileDebugSources',
                        'test',
                        'checkstyle',
                        'lint'])

task submodules {
  def folder = new File( 'library/src/main/assets/styles/bubble-wrap/bubble-wrap.yaml' )
  if(!folder.exists()) {
    throw new GradleException("Submodules aren't present, please run:\n`git submodule init`, " +
        "\n`git submodule update`\nfrom your root directory")

  }
}

assemble.doFirst {
  submodules
}

dependencies {
  compile 'com.android.support:appcompat-v7:23.4.0'
  compile "com.mapzen.tangram:tangram:$tangram_version"
  compile 'com.mapzen.android:lost:1.1.1'
  compile 'com.mapzen:on-the-road:0.8.4'
  compile 'com.mapzen.android:pelias-android-sdk:0.7.2'
  compile 'com.google.dagger:dagger:2.0'
  compile 'javax.annotation:javax.annotation-api:1.2'

  apt 'com.google.dagger:dagger-compiler:2.0'

  testCompile 'junit:junit:4.12'
  testCompile 'org.assertj:assertj-core:1.7.1'
  testCompile 'org.powermock:powermock:1.6.4'
  testCompile 'org.powermock:powermock-module-junit4:1.6.4'
  testCompile 'org.powermock:powermock-api-mockito:1.6.4'
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')
