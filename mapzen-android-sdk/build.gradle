buildscript {
  repositories {
    mavenCentral()
    mavenLocal()
    maven {
      url 'https://plugins.gradle.org/m2/'
    }
    google()
  }
  dependencies {
    classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
    classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.6.1'
  }
}

apply plugin: 'com.android.library'
apply plugin: 'checkstyle'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.getkeepsafe.dexcount'

group = GROUP
version = VERSION_NAME
project.archivesBaseName = POM_ARTIFACT_ID

android {
  compileSdkVersion 26
  buildToolsVersion '26.0.2'

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion 26
    versionCode 1
    versionName "1.0"
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }

  testOptions {
    unitTests.returnDefaultValues = true
  }

  lintOptions {
    abortOnError false
  }
}

task checkstyle(type: Checkstyle) {
  configFile file("${project.rootDir}/config/checkstyle/checkstyle.xml")
  source 'src'
  include '**/*.java'
  exclude '**/gen/**'

  classpath = files()
}

dependencies {
  api project(':core')
  api ('com.mapzen:on-the-road:1.3.1') {
    exclude group: 'com.squareup.retrofit2', module: 'converter-gson'
  }

  annotationProcessor 'com.google.dagger:dagger-compiler:2.0'

  testImplementation 'junit:junit:4.12'
  testImplementation 'org.assertj:assertj-core:1.7.1'
  testImplementation 'org.powermock:powermock:1.6.4'
  testImplementation 'org.powermock:powermock-module-junit4:1.6.4'
  testImplementation 'org.powermock:powermock-api-mockito:1.6.4'
}

apply from: rootProject.file('gradle/gradle-mvn-push.gradle')

task aarSize {
  doLast {

    File mapzen = file("build/outputs/aar/mapzen-android-sdk-release.aar")
    def mapzenSize = mapzen.length() / (1024 * 1024)

    def depsSize = 0
    configurations.compile.collect { it.length() / (1024 * 1024) }.each { depsSize += it }

    def totalSize = mapzenSize + depsSize
    println ""
    println "TOTAL SIZE (mapzen aar + dependencies): ${Math.round(totalSize * 100) / 100} Mb"
    println ""

    println "MAPZEN AAR SIZE: ${Math.round(mapzen.length() / (1024) * 100) / 100} kb"
    println ""


    println "ALL DEPENDENCIES: ${Math.round(depsSize * 100) / 100} Mb"
    println ""

    println "DEPENDENCIES:"
    configurations
        .compile
        .sort { -it.length() }
        .each { println "${it.name} : ${Math.round(it.length() / (1024) * 100) / 100} kb" }

  }
  dependsOn 'assembleRelease'
}

dexcount {
  runOnEachAssemble false
}

task permissions {
  File manifest = file("src/main/AndroidManifest.xml")
  println ""
  println "Permissions:"
  println manifest.readLines().findAll { x -> x.contains("uses-permission")}
  println ""
}
